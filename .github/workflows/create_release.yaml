name: "Create release"

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  Build:
    name: Main
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Fetch tags
        run: git fetch --tags

      - id: get_last_tag_hash
        name: Get last tag hash
        run: echo "lastTagHash=$(git rev-list --tags --max-count=1)" >> $GITHUB_OUTPUT

      - id: get_current_hash
        name: Get current hash
        run: echo "lastCurrentHash=$(git log --pretty=format:%H)" >> $GITHUB_OUTPUT

      - name: Check new commits
        if: ${{ steps.get_last_tag_hash.outputs.lastTagHash == steps.get_current_hash.outputs.lastCurrentHash }}
        uses: actions/github-script@v7
        with:
          script: core.setFailed('The current commit contains the tag')

      - id: get_last_tag
        name: Get last tag
        run: echo "lastTag=$(git describe --tags ${{ steps.get_last_tag_hash.outputs.lastTagHash }})" >> $GITHUB_OUTPUT

      - id: prepare_notes
        name: Prepare notes
        uses: actions/github-script@v7
        with:
          result-encoding: json
          script: |
            const fs = require('node:fs');
            const script = require('./.github/scripts/prepare_notes.js');

            return await script({
              core: core,
              fs: fs,
              lastTag: '${{ steps.get_last_tag.outputs.lastTag }}'
            });

      - name: Echo dgb
        run:  |
          echo ${{ steps.prepare_notes.outputs.version }}
          echo ${{ steps.prepare_notes.outputs.notes }}
          cat ${{ steps.prepare_notes.outputs.notes }}

      - name: Create release
        run: gh release create v${{ steps.prepare_notes.outputs.version }} --title ${{ steps.prepare_notes.outputs.version }} --notes-file ${{ steps.prepare_notes.outputs.notes }} --fail-on-no-commits ./README.md
        env:
          GH_TOKEN: ${{ github.token }}